@*@{
    Layout = null; // Optional if you're not using a shared layout
    var salesData = (IEnumerable<dynamic>)ViewBag.SalesData;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Sales Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f5f5f5;
            margin: 40px;
            text-align: center;
        }

        .chart-container {
            max-width: 800px;
            height: 400px;
            margin: auto;
            background: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 8px;
        }

        canvas {
            width: 100% !important;
            height: 89% !important;
        }
    </style>
</head>
<body>
    <div class="chart-container">
        <h2>Monthly Sales Chart</h2>
        <canvas id="salesChart"></canvas>
    </div>

    <script>
        const labels = @Html.Raw(Json.Serialize(salesData.Select(s => s.Month)));
        const data = @Html.Raw(Json.Serialize(salesData.Select(s => s.TotalSales)));

        const ctx = document.getElementById('salesChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Sales (₹)',
                    data: data,
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>
</html>*@

@* @{
    var salesData = (IEnumerable<dynamic>)ViewBag.SalesData;
    var filter = ViewBag.Filter as string;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Sales Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f8f9fa;
        }

        .chart-container {
            max-width: 800px;
            margin: 40px auto;
            background: #fff;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        form {
            display: flex;
            justify-content: center;
        }

        select {
            padding: 6px 12px;
            font-size: 14px;
        }

        .canvas-wrapper {
            position: relative;
            width: 100%;
            height: 400px; /* Set fixed height */
        }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100% !important;
            height: 100% !important;
        }
    </style>
</head>
<body>
    <div class="chart-container">
        <h2 style="text-align:center;">Sales Chart</h2>

        <!-- Filter Dropdown -->
        <form method="get" asp-action="SalesChart">
            <select name="filter" asp-items="ViewBag.FilterOptions" onchange="this.form.submit()"></select>
        </form>

        <!-- Chart Canvas -->
        <div class="canvas-wrapper">
            <canvas id="salesChart"></canvas>
        </div>
    </div>

    <script>
        const labels = @Html.Raw(Json.Serialize(salesData.Select(s => s.Period)));
        const data = @Html.Raw(Json.Serialize(salesData.Select(s => s.TotalSales)));

        const ctx = document.getElementById('salesChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Sales (₹)',
                    data: data,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: value => '₹' + value
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
    </script>
</body>
</html> *@

@{
    var salesData = (IEnumerable<dynamic>)ViewBag.SalesData;
    var filter = ViewBag.Filter as string;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Sales Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(to right, #e3f2fd, #fce4ec);
            margin: 0;
            padding: 0;
        }

        .chart-container {
            max-width: 850px;
            margin: 50px auto;
            background: #ffffff;
            padding: 30px;
            border-radius: 16px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 10px;
        }

        form {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        select {
            padding: 10px 16px;
            font-size: 15px;
            border: 1px solid #ccc;
            border-radius: 6px;
            background-color: #fafafa;
            cursor: pointer;
            transition: all 0.2s ease-in-out;
        }

            select:hover {
                border-color: #1976d2;
            }

        .canvas-wrapper {
            position: relative;
            width: 100%;
            height: 450px;
        }

        canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100% !important;
            height: 100% !important;
        }

        @@media (max-width: 600px) {
            .chart-container{
            margin: 20px;
            padding: 20px;
        }

        }
    </style>
</head>
<body>
    <div class="chart-container">
        <h2>📊 Real Estate Sales Report</h2>

        <!-- Filter Dropdown -->
        <form method="get" asp-action="SalesChart">
            <label for="filter">Filter By:</label>
            <select name="filter" asp-items="ViewBag.FilterOptions" onchange="this.form.submit()" id="filter"></select>
        </form>

        <!-- Chart Canvas -->
        <div class="canvas-wrapper">
            <canvas id="salesChart"></canvas>
        </div>
    </div>

    <script>
        const labels = @Html.Raw(Json.Serialize(salesData.Select(s => s.Period)));
        const data = @Html.Raw(Json.Serialize(salesData.Select(s => s.TotalSales)));

        const ctx = document.getElementById('salesChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Sales (₹)',
                    data: data,
                    backgroundColor: 'rgba(25, 118, 210, 0.6)',
                    borderColor: 'rgba(25, 118, 210, 1)',
                    borderWidth: 1,
                    borderRadius: 6,
                    hoverBackgroundColor: 'rgba(25, 118, 210, 0.8)',
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                animation: {
                    duration: 1000,
                    easing: 'easeOutQuart'
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: value => '₹' + value,
                            stepSize: 1000000
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: (context) => `₹${context.parsed.y.toLocaleString()}`
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>



@{
    ViewData["Title"] = "Transaction Chart";
}
<h2>@ViewData["Title"]</h2>

<select id="filterSelect">
    <option value="Daily">Daily</option>
    <option value="Weekly">Weekly</option>
    <option value="Monthly">Monthly</option>
    <option value="Yearly">Yearly</option>
</select>

<canvas id="transactionChart" width="600" height="300"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let chart;

    function loadChart(filter) {
        fetch(`/Transaction/GetChartData?filter=${filter}`)
            .then(response => response.json())
            .then(data => {
                if (chart) {
                    chart.destroy();
                }

                const ctx = document.getElementById('transactionChart').getContext('2d');
                chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: `Transactions - ${filter}`,
                            data: data.amounts,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)'
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
    }

    document.getElementById('filterSelect').addEventListener('change', function () {
        loadChart(this.value);
    });

    // Load initial chart
    loadChart('Daily');
</script>